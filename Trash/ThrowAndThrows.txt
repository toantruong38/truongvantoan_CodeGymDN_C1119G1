throw keyword: explicitly throw an exception from a method or any block of code
.Mainly used to throw custom exceptions

Syntax:
throw Instance
Example:
throw new ArithmeticException("/ by zero");

Instance must be of type Throwable or subclass of Throwable.
The flow of execution of the program stops immediately after the throw statement
is executed and the nearest enclosing try block is checked to see if it has a 
catch statement that matches the type of exception.
If 'yes' controlled is transferred to that statement 
otherwise next enclosing try block is checked and so on.
If no matching catch is found then the default exception handler will halt the 
program.

throws keyword: signature of method to indicate that this method might throw one 
of the listed type exceptions.The CALLER to these methods has to HANDLE the 
exception using a try-catch block

Syntax: 
type method_name(params) throws exception_list
exception_list is comma separated list of all the exception which a method might
throw.

In a program,if there is a chance of rising an exception then compiler always
warn us about it and compulsorily we should handle that checked exception.
Otherwise we will get compile time error saying unreported exception XXX
must be caught or declared to be thrown.
To prevent this compile time error we can handle the exception in two ways:
1.Using try catch
2.Using throws keyword
Use throws keyword to delegate the responsibility of exception handling to the 
caller
!Important points to remember about throws keyword:
-throws keyword is required only for checked exception and usage of throws keyword
-throws keyword is required only to convince compiler and usage of throws keyword
does not prevent abnormal termination of program.
-by the help of throws keyword we can provide information to the caller of the
method about the exeption.










